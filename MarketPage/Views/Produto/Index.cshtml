@model ItemViewProduto
@{
    ViewData["Title"] = Model.Nome;
    Model.Quantidade = 0;
    var valorString = string.Concat("R$", Model.Valor);
    var listDescricao = Model.Descricao.Split(';');
}
<link rel="stylesheet" href="~/css/produto.css" />



@using (Html.BeginForm("PostItemCarrinho", "Login", FormMethod.Post, new { @class = "needs-validation", @novalidate = true }))
{
    @Html.ValidationSummary()
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Valor)
    <div class="container">
        <div class="card">
            <div class="container-fluid">
                @* Alerta Controller TempData*@
                <div class="row justify-content-center mt-3">
                    @if (TempData["Message"] != null)
                    {
                        <div class="alert alert-warning" role="alert">
                            @TempData["Message"].ToString()
                        </div>
                    }
                </div>
                <div class="wrapper row">
                    @{
                        var base64 = Convert.ToBase64String(Model.Img);
                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                    }
                    <div class="preview col-md-6">
                        <div class="mb-2">
                            <div class="preview-pic tab-content">
                                <div class="tab-pane active text-center" id="pic-1">
                                    <img class="img-thumbnail mt-3 mb-2 ml-2 mr-2" src='@imgSrc' style="height: 430px; width: 450px" />
                                </div>
                                @{
                                    var nPic = 2;
                                    foreach (var item in Model.ImgsPadrao)
                                    {
                                        <div class="tab-pane align-self-center text-center" id="@string.Concat("pic-",nPic)">
                                            <img class="img-thumbnail mt-3 mb-3 ml-2 mr-2" src="@String.Format("data:image/gif;base64,{0}", Convert.ToBase64String(item))" style="height: 430px; width: 450px" />
                                        </div>
                                        nPic++;
                                    }
                                }
                            </div>
                            <ul class="preview-thumbnail nav nav-tabs mb-2 ml-4 mr-4">
                                <li class="active border bg-light" style="height:60px;width:60px">
                                    <a data-target="#pic-1" data-toggle="tab">
                                        <img class="img-fluid" src='@imgSrc' style="height:60px;width:60px" />
                                    </a>
                                </li>
                                @{
                                    var nPic2 = 2;
                                    foreach (var item in Model.ImgsPadrao)
                                    {
                                        <li class="border bg-light" style="height:60px;width:60px">
                                            <a data-target="#@string.Concat("pic-",nPic2)" data-toggle="tab">
                                                <img class="img-fluid" src="@String.Format("data:image/gif;base64,{0}", Convert.ToBase64String(item))" style="height:60px;width:60px" />
                                            </a>
                                        </li>
                                        nPic2++;
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                    <div class="col mt-3 ml-2 mr-2 mb-2 card">
                        <div class="card-title ml-2 mt-3">
                            <h5>@Model.Nome</h5>
                            <hr />
                        </div>
                        <div class="row mb-1">
                            <div class="col">
                                @{
                                    var valorParcelado = (Model.Valor / 12).ToString("00.00");
                                    <div class="text-capitalize ml-2">
                                        <label style="font-size:24px;"><strong>R$ @Model.Valor</strong></label>
                                        <label class="text-secondary ml-2" style="font-size:16px;">Ou 12x de R$@valorParcelado</label>
                                        <a class="ml-2" href="~/Home/FormasPagamento" style="font-size:14px;color:darkcyan"><b>Formas de pagamento</b></a>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <div class="input-group mb-2 ml-2 mr-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text" id="basic-addon1">Quantidade:</span>
                                    </div>
                                    @Html.TextBoxFor(model => model.Quantidade, new { @type = "number", @class = "form-control", @id = "txtQuantidade", @min = 1, @required = true })
                                </div>
                            </div>
                        </div>

                        @if (!string.IsNullOrEmpty(Model.Tamanhos))
                        {
                            <div class="row">
                                <div class="col">
                                    <div class="input-group mb-2 ml-2 mr-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text" id="basic-addon1">Tamanho:</span>
                                        </div>
                                        @Html.DropDownListFor(m => m.Tamanhos,
                                             new SelectList(Model.Tamanhos.Split(';')),
                                             "", new { @class = "form-control", @title = "Selecione o tamanho", @required = true })
                                    </div>
                                </div>
                            </div>
                        }

                        <div class="row d-flex justify-content-center">
                            <div class="mt-2 mb-3">
                                <button class="btn btn-success ml-2" type="submit">Add Carrinho<i class="fas fa-shopping-cart ml-2"></i></button>
                            </div>
                        </div>

                        <div class="row">
                            <article class="ml-3 mr-5 mt-3">
                                <div class="ml-2">
                                    <p><strong>Descrição</strong></p>
                                    @foreach (var item in listDescricao)
                                    {
                                        <label>@item</label><br />
                                    }
                                </div>
                            </article>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            var forms = document.getElementsByClassName('needs-validation');
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>

